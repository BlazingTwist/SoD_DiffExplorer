fileDownloaderConfig:
  #you shouldn't have to change this, but just in case you do, you can
  onlineAddressDict:
    RS_DATA: data
    RS_SCENE: scene
    RS_SHARED: shareddata
    RS_SOUND: sound
    RS_MOVIES: movies


  #either "true" or "false"
  #if set to true it will wait for user input when a file throws an exception during downloading
  #if set to false it will ignore all failed downloads apart from logging them
  pauseDownloadOnError: true


  #if set to false it won't download the files and instead only log which files it would download
  doDownload: false


  downloadURL:
    #don't forget the '/' at the end here
    baseURL: http://media.schoolofdragons.com/DWADragonsUnity/
    platform: Steam
    version: 3.6.0
    baseSuffix: High
    assetInfo: data/AssetVersionsDO.xml


  outputDirectory:
    #the absolute or relative path to the output Directory (where the files will be downloaded to)
    # example for absolute path: 'D:\BTFileDownloader\download'
    # example for relative path: 'someDirectory\download'
    baseDirectory: fileDownloads

    #if set to false it will download directly to the baseDirectory
    #if set to true it will append the platform/version/date as subdirectories
    # example:
    #  platform = true, version = false, date = true
    #  will result in
    #  fileDownloads\Steam\2020.04.07
    appendPlatform: false
    appendVersion: false
    #date format will always be yyyy.MM.dd as the alphabetical order will then be the same as the chronological order
    appendDate: false


  #use this to filter filenames
  #filterexamples:
  #  allow al files of any directory with a name starting with "dw" and ending with "do" (e.g. 'RS_SHARED/dwthunderdrumdo')
  #    ^(.*?)/dw(.*?)do$
  #
  #  use multiple regex filters (only allows files that match all filters)
  #    regexFilters:
  #      - filter1
  #      - !filter2
  #      - \!filter3
  #
  #  to negate a regex (allowing only files that don't match it) start the filter with an '!' character (see above)
  #  if your regex starts with an '!' for other reasons you can escape the negation by putting a '\' in front of it
  regexFilters:
    - (RS_SOUND/sndwingflapmed7)|(RS_MOVIES/BoD_Intro.mp4)


  #use this to only download some localizations
  #otherwise downloads ALL localizations available
  #filterexamples:
  # allow only en-us and de-de localized files (and files that are not localized)
  #   localeFilters:
  #     - en-us
  #     - de-de
  localeFilters:
    - en-us
    - de-de